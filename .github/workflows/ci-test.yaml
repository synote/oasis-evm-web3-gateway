# NOTE: This name appears in GitHub's Checks API and in workflow's status badge.
name: ci-test

# Trigger the workflow when:
on:
  # A push occurs to one of the matched branches.
  push:
    branches:
      - main
      - stable/*
  # Or when a pull request event occurs for a pull request against one of the
  # matched branches.
  pull_request:
    branches:
      - main
      - stable/*

jobs:
  test-go:
    runs-on: ubuntu-latest
    needs:
      - build-web3
      - build-oasis-deposit
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    env:
      OASIS_CORE_VERSION: 21.3.1
      OASIS_NODE: ${{ github.workspace }}/oasis_core/oasis-node
      OASIS_NET_RUNNER: ${{ github.workspace }}/oasis_core/oasis-net-runner
      OASIS_EMERALD_VERSION: 0.1.0-alpha1
      OASIS_EMERALD_PARATIME: ${{ github.workspace }}/oasis_core/emerald-paratime
      TEST: ${{ matrix.testCmd }}
    steps:
      - name: Checkout code
      - uses: actions/checkout@v2

      - name: Set up Go 1.16
        uses: actions/setup-go@v2.1.4
        with:
          go-version: "1.16.x"

      - run: wget "https://github.com/oasisprotocol/oasis-core/releases/download/v${OASIS_CORE_VERSION}/oasis_core_${OASIS_CORE_VERSION}_linux_amd64.tar.gz"
      - run: tar xfvz oasis_core_${OASIS_CORE_VERSION}_linux_amd64.tar.gz
      - run: mkdir dirname ${OASIS_NODE}
      - run: mv oasis_core_${OASIS_CORE_VERSION}_linux_amd64/oasis-node ${OASIS_NODE}
      - run: mv oasis_core_${OASIS_CORE_VERSION}_linux_amd64/oasis-net-runner ${OASIS_NET_RUNNER}

      - run: wget "https://github.com/oasisprotocol/emerald-paratime/releases/download/v${OASIS_EMERALD_VERSION}/emerald-paratime" -O ${OASIS_EMERALD_PARATIME}

      # FYI: Snippet taken from oasisprotocol/web3-tests/scripts/e2e.oasis.sh
      - run: export TEST_BASE_DIR=/tmp/eth-runtime-test
      - run: export OASIS_NODE_GRPC_ADDR=unix:${TEST_BASE_DIR}/net-runner/network/client-0/internal.sock
      - run: export FIXTURE_FILE="${TEST_BASE_DIR}/fixture.json"
      - run: |
          ${OASIS_NET_RUNNER} dump-fixture \
            --fixture.default.node.binary ${OASIS_NODE} \
            --fixture.default.deterministic_entities \
            --fixture.default.fund_entities \
            --fixture.default.num_entities 2 \
            --fixture.default.keymanager.binary '' \
            --fixture.default.runtime.binary=${OASIS_EMERALD_PARATIME} \
            --fixture.default.halt_epoch 100000 \
            --fixture.default.staking_genesis ${GITHUB_WORKSPACE}/tests/staking_genesis.json > "$FIXTURE_FILE"
      - run: jq '.clients[0].runtime_config."1".allow_expensive_queries = true' "$FIXTURE_FILE" > "$FIXTURE_FILE.tmp"
      - run: mv "$FIXTURE_FILE.tmp" "$FIXTURE_FILE"

      - run: ${OASIS_NET_RUNNER} --fixture.file "$FIXTURE_FILE" --basedir ${TEST_BASE_DIR} --basedir.no_temp_dir &

      - run: wait 10

      - name: Unit tests with coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic -v ./...

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2.1.0
